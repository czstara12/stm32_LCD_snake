ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USART1_IRQHandler,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	USART1_IRQHandler
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	USART1_IRQHandler:
  25              	.LFB32:
  26              		.file 1 "SYSTEM/usart/usart.c"
   1:SYSTEM/usart/usart.c **** ﻿#include "usart.h"
   2:SYSTEM/usart/usart.c **** //////////////////////////////////////////////////////////////////////////////////
   3:SYSTEM/usart/usart.c **** //如果使用ucos,则包括下面的头文件即可.
   4:SYSTEM/usart/usart.c **** #if SYSTEM_SUPPORT_OS
   5:SYSTEM/usart/usart.c **** #include "includes.h" //ucos 使用
   6:SYSTEM/usart/usart.c **** #endif
   7:SYSTEM/usart/usart.c **** //////////////////////////////////////////////////////////////////////////////////
   8:SYSTEM/usart/usart.c **** //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   9:SYSTEM/usart/usart.c **** //ALIENTEK STM32开发板
  10:SYSTEM/usart/usart.c **** //串口1初始化（适合STM32F10x系列）
  11:SYSTEM/usart/usart.c **** //正点原子@ALIENTEK
  12:SYSTEM/usart/usart.c **** //技术论坛:www.openedv.com
  13:SYSTEM/usart/usart.c **** //创建日期:2010/1/1
  14:SYSTEM/usart/usart.c **** //版本：V1.7
  15:SYSTEM/usart/usart.c **** //版权所有，盗版必究。
  16:SYSTEM/usart/usart.c **** //Copyright(C) 广州市星翼电子科技有限公司 2009-2019
  17:SYSTEM/usart/usart.c **** //All rights reserved
  18:SYSTEM/usart/usart.c **** //********************************************************************************
  19:SYSTEM/usart/usart.c **** //V1.3修改说明
  20:SYSTEM/usart/usart.c **** //支持适应不同频率下的串口波特率设置.
  21:SYSTEM/usart/usart.c **** //加入了对printf的支持
  22:SYSTEM/usart/usart.c **** //增加了串口接收命令功能.
  23:SYSTEM/usart/usart.c **** //修正了printf第一个字符丢失的bug
  24:SYSTEM/usart/usart.c **** //V1.4修改说明
  25:SYSTEM/usart/usart.c **** //1,修改串口初始化IO的bug
  26:SYSTEM/usart/usart.c **** //2,修改了USART_RX_STA,使得串口最大接收字节数为2的14次方
  27:SYSTEM/usart/usart.c **** //3,增加了USART_REC_LEN,用于定义串口最大允许接收的字节数(不大于2的14次方)
  28:SYSTEM/usart/usart.c **** //4,修改了EN_USART1_RX的使能方式
  29:SYSTEM/usart/usart.c **** //V1.5修改说明
  30:SYSTEM/usart/usart.c **** //1,增加了对UCOSII的支持
  31:SYSTEM/usart/usart.c **** //V1.6修改说明 20150109
  32:SYSTEM/usart/usart.c **** //uart_init函数去掉了开启PE中断
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 2


  33:SYSTEM/usart/usart.c **** //V1.7修改说明 20150322
  34:SYSTEM/usart/usart.c **** //修改OS_CRITICAL_METHOD宏判断为：SYSTEM_SUPPORT_OS
  35:SYSTEM/usart/usart.c **** //////////////////////////////////////////////////////////////////////////////////
  36:SYSTEM/usart/usart.c **** 
  37:SYSTEM/usart/usart.c **** //////////////////////////////////////////////////////////////////
  38:SYSTEM/usart/usart.c **** //加入以下代码,支持printf函数,而不需要选择use MicroLIB
  39:SYSTEM/usart/usart.c **** #if 0
  40:SYSTEM/usart/usart.c **** #pragma import(__use_no_semihosting)
  41:SYSTEM/usart/usart.c **** //标准库需要的支持函数
  42:SYSTEM/usart/usart.c **** struct __FILE
  43:SYSTEM/usart/usart.c **** {
  44:SYSTEM/usart/usart.c **** 	int handle;
  45:SYSTEM/usart/usart.c **** 	/* Whatever you require here. If the only file you are using is */
  46:SYSTEM/usart/usart.c **** 	/* standard output using printf() for debugging, no file handling */
  47:SYSTEM/usart/usart.c **** 	/* is required. */
  48:SYSTEM/usart/usart.c **** };
  49:SYSTEM/usart/usart.c **** /* FILE is typedef’ d in stdio.h. */
  50:SYSTEM/usart/usart.c **** FILE __stdout;
  51:SYSTEM/usart/usart.c **** //定义_sys_exit()以避免使用半主机模式
  52:SYSTEM/usart/usart.c **** void _sys_exit(int x)
  53:SYSTEM/usart/usart.c **** {
  54:SYSTEM/usart/usart.c **** 	x = x;
  55:SYSTEM/usart/usart.c **** }
  56:SYSTEM/usart/usart.c **** //重定向fputc函数
  57:SYSTEM/usart/usart.c **** //printf的输出，指向fputc，由fputc输出到串口
  58:SYSTEM/usart/usart.c **** //这里使用串口1(USART1)输出printf信息
  59:SYSTEM/usart/usart.c **** int fputc(int ch, FILE *f)
  60:SYSTEM/usart/usart.c **** {
  61:SYSTEM/usart/usart.c **** 	while ((USART1->SR & 0X40) == 0)
  62:SYSTEM/usart/usart.c **** 		;				 //等待上一次串口数据发送完成
  63:SYSTEM/usart/usart.c **** 	USART1->DR = (u8)ch; //写DR,串口1将发送数据
  64:SYSTEM/usart/usart.c **** 	return ch;
  65:SYSTEM/usart/usart.c **** }
  66:SYSTEM/usart/usart.c **** #endif
  67:SYSTEM/usart/usart.c **** //end
  68:SYSTEM/usart/usart.c **** //////////////////////////////////////////////////////////////////
  69:SYSTEM/usart/usart.c **** 
  70:SYSTEM/usart/usart.c **** #if EN_USART1_RX //如果使能了接收
  71:SYSTEM/usart/usart.c **** //串口1中断服务程序
  72:SYSTEM/usart/usart.c **** //注意,读取USARTx->SR能避免莫名其妙的错误
  73:SYSTEM/usart/usart.c **** u8 USART_RX_BUF[USART_REC_LEN]; //接收缓冲,最大USART_REC_LEN个字节.
  74:SYSTEM/usart/usart.c **** //接收状态
  75:SYSTEM/usart/usart.c **** //bit15，	接收完成标志
  76:SYSTEM/usart/usart.c **** //bit14，	接收到0x0d
  77:SYSTEM/usart/usart.c **** //bit13~0，	接收到的有效字节数目
  78:SYSTEM/usart/usart.c **** u16 USART_RX_STA = 0; //接收状态标记
  79:SYSTEM/usart/usart.c **** 
  80:SYSTEM/usart/usart.c **** void USART1_IRQHandler(void)
  81:SYSTEM/usart/usart.c **** {
  27              		.loc 1 81 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  82:SYSTEM/usart/usart.c **** 	u8 res;
  83:SYSTEM/usart/usart.c **** #if SYSTEM_SUPPORT_OS //如果SYSTEM_SUPPORT_OS为真，则需要支持OS.
  84:SYSTEM/usart/usart.c **** 	OSIntEnter();
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 3


  85:SYSTEM/usart/usart.c **** #endif
  86:SYSTEM/usart/usart.c **** 	if (USART1->SR & (1 << 5)) //接收到数据
  32              		.loc 1 86 0
  33 0000 154B     		ldr	r3, .L16
  34 0002 1A88     		ldrh	r2, [r3]
  35 0004 9206     		lsls	r2, r2, #26
  36 0006 1CD5     		bpl	.L10
  87:SYSTEM/usart/usart.c **** 	{
  88:SYSTEM/usart/usart.c **** 		res = USART1->DR;
  89:SYSTEM/usart/usart.c **** 		if ((USART_RX_STA & 0x8000) == 0) //接收未完成
  37              		.loc 1 89 0
  38 0008 1449     		ldr	r1, .L16+4
  88:SYSTEM/usart/usart.c **** 		if ((USART_RX_STA & 0x8000) == 0) //接收未完成
  39              		.loc 1 88 0
  40 000a 9B88     		ldrh	r3, [r3, #4]
  41              		.loc 1 89 0
  42 000c 0A88     		ldrh	r2, [r1]
  88:SYSTEM/usart/usart.c **** 		if ((USART_RX_STA & 0x8000) == 0) //接收未完成
  43              		.loc 1 88 0
  44 000e 9BB2     		uxth	r3, r3
  45              	.LVL0:
  46              		.loc 1 89 0
  47 0010 1004     		lsls	r0, r2, #16
  48 0012 16D4     		bmi	.L10
  90:SYSTEM/usart/usart.c **** 		{
  91:SYSTEM/usart/usart.c **** 			if (USART_RX_STA & 0x4000) //接收到了0x0d
  49              		.loc 1 91 0
  50 0014 5004     		lsls	r0, r2, #17
  88:SYSTEM/usart/usart.c **** 		if ((USART_RX_STA & 0x8000) == 0) //接收未完成
  51              		.loc 1 88 0
  52 0016 DBB2     		uxtb	r3, r3
  53              		.loc 1 91 0
  54 0018 0FD4     		bmi	.L14
  92:SYSTEM/usart/usart.c **** 			{
  93:SYSTEM/usart/usart.c **** 				if (res != 0x0a)
  94:SYSTEM/usart/usart.c **** 					USART_RX_STA = 0; //接收错误,重新开始
  95:SYSTEM/usart/usart.c **** 				else
  96:SYSTEM/usart/usart.c **** 					USART_RX_STA |= 0x8000; //接收完成了
  97:SYSTEM/usart/usart.c **** 			}
  98:SYSTEM/usart/usart.c **** 			else //还没收到0X0D
  99:SYSTEM/usart/usart.c **** 			{
 100:SYSTEM/usart/usart.c **** 				if (res == 0x0d)
  55              		.loc 1 100 0
  56 001a 0D2B     		cmp	r3, #13
  57 001c 18D0     		beq	.L15
 101:SYSTEM/usart/usart.c **** 					USART_RX_STA |= 0x4000;
 102:SYSTEM/usart/usart.c **** 				else
 103:SYSTEM/usart/usart.c **** 				{
 104:SYSTEM/usart/usart.c **** 					USART_RX_BUF[USART_RX_STA & 0X3FFF] = res;
 105:SYSTEM/usart/usart.c **** 					USART_RX_STA++;
  58              		.loc 1 105 0
  59 001e 501C     		adds	r0, r2, #1
  81:SYSTEM/usart/usart.c **** 	u8 res;
  60              		.loc 1 81 0
  61 0020 10B4     		push	{r4}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 4


  64              		.cfi_offset 4, -4
  65              		.loc 1 105 0
  66 0022 80B2     		uxth	r0, r0
 104:SYSTEM/usart/usart.c **** 					USART_RX_STA++;
  67              		.loc 1 104 0
  68 0024 0E4C     		ldr	r4, .L16+8
  69 0026 C2F30D02 		ubfx	r2, r2, #0, #14
 106:SYSTEM/usart/usart.c **** 					if (USART_RX_STA > (USART_REC_LEN - 1))
  70              		.loc 1 106 0
  71 002a C728     		cmp	r0, #199
 105:SYSTEM/usart/usart.c **** 					if (USART_RX_STA > (USART_REC_LEN - 1))
  72              		.loc 1 105 0
  73 002c 0880     		strh	r0, [r1]	@ movhi
 104:SYSTEM/usart/usart.c **** 					USART_RX_STA++;
  74              		.loc 1 104 0
  75 002e A354     		strb	r3, [r4, r2]
  76              		.loc 1 106 0
  77 0030 01D9     		bls	.L1
  94:SYSTEM/usart/usart.c **** 				else
  78              		.loc 1 94 0
  79 0032 0023     		movs	r3, #0
  80              	.LVL1:
  81 0034 0B80     		strh	r3, [r1]	@ movhi
  82              	.L1:
 107:SYSTEM/usart/usart.c **** 						USART_RX_STA = 0; //接收数据错误,重新开始接收
 108:SYSTEM/usart/usart.c **** 				}
 109:SYSTEM/usart/usart.c **** 			}
 110:SYSTEM/usart/usart.c **** 		}
 111:SYSTEM/usart/usart.c **** 	}
 112:SYSTEM/usart/usart.c **** #if SYSTEM_SUPPORT_OS //如果SYSTEM_SUPPORT_OS为真，则需要支持OS.
 113:SYSTEM/usart/usart.c **** 	OSIntExit();
 114:SYSTEM/usart/usart.c **** #endif
 115:SYSTEM/usart/usart.c **** }
  83              		.loc 1 115 0
  84 0036 10BC     		pop	{r4}
  85              	.LCFI1:
  86              		.cfi_restore 4
  87              		.cfi_def_cfa_offset 0
  88 0038 7047     		bx	lr
  89              	.LVL2:
  90              	.L14:
  93:SYSTEM/usart/usart.c **** 					USART_RX_STA = 0; //接收错误,重新开始
  91              		.loc 1 93 0
  92 003a 0A2B     		cmp	r3, #10
  93 003c 02D0     		beq	.L6
  94:SYSTEM/usart/usart.c **** 				else
  94              		.loc 1 94 0
  95 003e 0023     		movs	r3, #0
  96              	.LVL3:
  97 0040 0B80     		strh	r3, [r1]	@ movhi
  98              	.L10:
  99 0042 7047     		bx	lr
 100              	.LVL4:
 101              	.L6:
  96:SYSTEM/usart/usart.c **** 			}
 102              		.loc 1 96 0
 103 0044 6FEA4242 		mvn	r2, r2, lsl #17
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 5


 104 0048 6FEA5242 		mvn	r2, r2, lsr #17
 105 004c 0A80     		strh	r2, [r1]	@ movhi
 106 004e 7047     		bx	lr
 107              	.L15:
 101:SYSTEM/usart/usart.c **** 				else
 108              		.loc 1 101 0
 109 0050 42F48042 		orr	r2, r2, #16384
 110 0054 0A80     		strh	r2, [r1]	@ movhi
 111 0056 7047     		bx	lr
 112              	.L17:
 113              		.align	2
 114              	.L16:
 115 0058 00380140 		.word	1073821696
 116 005c 00000000 		.word	.LANCHOR0
 117 0060 00000000 		.word	USART_RX_BUF
 118              		.cfi_endproc
 119              	.LFE32:
 121              		.global	__aeabi_ui2f
 122              		.global	__aeabi_fdiv
 123              		.global	__aeabi_f2uiz
 124              		.global	__aeabi_i2f
 125              		.global	__aeabi_fsub
 126              		.global	__aeabi_fmul
 127              		.section	.text.uart_init,"ax",%progbits
 128              		.align	1
 129              		.p2align 2,,3
 130              		.global	uart_init
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu softvfp
 136              	uart_init:
 137              	.LFB33:
 116:SYSTEM/usart/usart.c **** #endif
 117:SYSTEM/usart/usart.c **** //初始化IO 串口1
 118:SYSTEM/usart/usart.c **** //pclk2:PCLK2时钟频率(Mhz)
 119:SYSTEM/usart/usart.c **** //bound:波特率
 120:SYSTEM/usart/usart.c **** void uart_init(u32 pclk2, u32 bound)
 121:SYSTEM/usart/usart.c **** {
 138              		.loc 1 121 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              	.LVL5:
 122:SYSTEM/usart/usart.c **** 	float temp;
 123:SYSTEM/usart/usart.c **** 	u16 mantissa;
 124:SYSTEM/usart/usart.c **** 	u16 fraction;
 125:SYSTEM/usart/usart.c **** 	temp = (float)(pclk2 * 1000000) / (bound * 16); //得到USARTDIV
 143              		.loc 1 125 0
 144 0000 284B     		ldr	r3, .L20
 121:SYSTEM/usart/usart.c **** 	float temp;
 145              		.loc 1 121 0
 146 0002 70B5     		push	{r4, r5, r6, lr}
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 16
 149              		.cfi_offset 4, -16
 150              		.cfi_offset 5, -12
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 6


 151              		.cfi_offset 6, -8
 152              		.cfi_offset 14, -4
 153              		.loc 1 125 0
 154 0004 03FB00F0 		mul	r0, r3, r0
 155              	.LVL6:
 121:SYSTEM/usart/usart.c **** 	float temp;
 156              		.loc 1 121 0
 157 0008 0D46     		mov	r5, r1
 158              		.loc 1 125 0
 159 000a FFF7FEFF 		bl	__aeabi_ui2f
 160              	.LVL7:
 161 000e 0446     		mov	r4, r0
 162 0010 2801     		lsls	r0, r5, #4
 163 0012 FFF7FEFF 		bl	__aeabi_ui2f
 164              	.LVL8:
 165 0016 0146     		mov	r1, r0
 166 0018 2046     		mov	r0, r4
 167 001a FFF7FEFF 		bl	__aeabi_fdiv
 168              	.LVL9:
 169 001e 0546     		mov	r5, r0
 170              	.LVL10:
 126:SYSTEM/usart/usart.c **** 	mantissa = temp;								//得到整数部分
 171              		.loc 1 126 0
 172 0020 FFF7FEFF 		bl	__aeabi_f2uiz
 173              	.LVL11:
 174 0024 84B2     		uxth	r4, r0
 175              	.LVL12:
 127:SYSTEM/usart/usart.c **** 	fraction = (temp - mantissa) * 16;				//得到小数部分
 176              		.loc 1 127 0
 177 0026 2046     		mov	r0, r4
 178 0028 FFF7FEFF 		bl	__aeabi_i2f
 179              	.LVL13:
 180 002c 0146     		mov	r1, r0
 181 002e 2846     		mov	r0, r5
 182 0030 FFF7FEFF 		bl	__aeabi_fsub
 183              	.LVL14:
 184 0034 4FF08341 		mov	r1, #1098907648
 185 0038 FFF7FEFF 		bl	__aeabi_fmul
 186              	.LVL15:
 187 003c FFF7FEFF 		bl	__aeabi_f2uiz
 188              	.LVL16:
 128:SYSTEM/usart/usart.c **** 	mantissa <<= 4;
 129:SYSTEM/usart/usart.c **** 	mantissa += fraction;
 130:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 2;		 //使能PORTA口时钟
 189              		.loc 1 130 0
 190 0040 194B     		ldr	r3, .L20+4
 131:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 14;	 //使能串口时钟
 132:SYSTEM/usart/usart.c **** 	GPIOA->CRH &= 0XFFFFF00F;	//IO状态设置
 133:SYSTEM/usart/usart.c **** 	GPIOA->CRH |= 0X000008B0;	//IO状态设置
 134:SYSTEM/usart/usart.c **** 	RCC->APB2RSTR |= 1 << 14;	//复位串口1
 135:SYSTEM/usart/usart.c **** 	RCC->APB2RSTR &= ~(1 << 14); //停止复位
 136:SYSTEM/usart/usart.c **** 								 //波特率设置
 137:SYSTEM/usart/usart.c **** 	USART1->BRR = mantissa;		 // 波特率设置
 138:SYSTEM/usart/usart.c **** 	USART1->CR1 |= 0X200C;		 //1位停止,无校验位.
 139:SYSTEM/usart/usart.c **** #if EN_USART1_RX				 //如果使能了接收
 140:SYSTEM/usart/usart.c **** 	//使能接收中断
 141:SYSTEM/usart/usart.c **** 	USART1->CR1 |= 1 << 5;				//接收缓冲区非空中断使能
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 7


 142:SYSTEM/usart/usart.c **** 	MY_NVIC_Init(3, 3, USART1_IRQn, 2); //组2，最低优先级
 191              		.loc 1 142 0
 192 0042 0321     		movs	r1, #3
 130:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 14;	 //使能串口时钟
 193              		.loc 1 130 0
 194 0044 9A69     		ldr	r2, [r3, #24]
 129:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 2;		 //使能PORTA口时钟
 195              		.loc 1 129 0
 196 0046 00EB0414 		add	r4, r0, r4, lsl #4
 197              	.LVL17:
 130:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 14;	 //使能串口时钟
 198              		.loc 1 130 0
 199 004a 42F00402 		orr	r2, r2, #4
 200 004e 9A61     		str	r2, [r3, #24]
 131:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 14;	 //使能串口时钟
 201              		.loc 1 131 0
 202 0050 9869     		ldr	r0, [r3, #24]
 203              	.LVL18:
 132:SYSTEM/usart/usart.c **** 	GPIOA->CRH |= 0X000008B0;	//IO状态设置
 204              		.loc 1 132 0
 205 0052 164A     		ldr	r2, .L20+8
 131:SYSTEM/usart/usart.c **** 	GPIOA->CRH &= 0XFFFFF00F;	//IO状态设置
 206              		.loc 1 131 0
 207 0054 40F48040 		orr	r0, r0, #16384
 208 0058 9861     		str	r0, [r3, #24]
 132:SYSTEM/usart/usart.c **** 	GPIOA->CRH |= 0X000008B0;	//IO状态设置
 209              		.loc 1 132 0
 210 005a 5068     		ldr	r0, [r2, #4]
 137:SYSTEM/usart/usart.c **** 	USART1->CR1 |= 0X200C;		 //1位停止,无校验位.
 211              		.loc 1 137 0
 212 005c 144D     		ldr	r5, .L20+12
 213              	.LVL19:
 132:SYSTEM/usart/usart.c **** 	GPIOA->CRH |= 0X000008B0;	//IO状态设置
 214              		.loc 1 132 0
 215 005e 20F47F60 		bic	r0, r0, #4080
 216 0062 5060     		str	r0, [r2, #4]
 133:SYSTEM/usart/usart.c **** 	RCC->APB2RSTR |= 1 << 14;	//复位串口1
 217              		.loc 1 133 0
 218 0064 5068     		ldr	r0, [r2, #4]
 129:SYSTEM/usart/usart.c **** 	RCC->APB2ENR |= 1 << 2;		 //使能PORTA口时钟
 219              		.loc 1 129 0
 220 0066 A4B2     		uxth	r4, r4
 221              	.LVL20:
 133:SYSTEM/usart/usart.c **** 	RCC->APB2RSTR |= 1 << 14;	//复位串口1
 222              		.loc 1 133 0
 223 0068 40F40B60 		orr	r0, r0, #2224
 224 006c 5060     		str	r0, [r2, #4]
 134:SYSTEM/usart/usart.c **** 	RCC->APB2RSTR &= ~(1 << 14); //停止复位
 225              		.loc 1 134 0
 226 006e DA68     		ldr	r2, [r3, #12]
 227              		.loc 1 142 0
 228 0070 0846     		mov	r0, r1
 134:SYSTEM/usart/usart.c **** 	RCC->APB2RSTR &= ~(1 << 14); //停止复位
 229              		.loc 1 134 0
 230 0072 42F48042 		orr	r2, r2, #16384
 231 0076 DA60     		str	r2, [r3, #12]
 135:SYSTEM/usart/usart.c **** 								 //波特率设置
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 8


 232              		.loc 1 135 0
 233 0078 DA68     		ldr	r2, [r3, #12]
 234 007a 22F48042 		bic	r2, r2, #16384
 235 007e DA60     		str	r2, [r3, #12]
 137:SYSTEM/usart/usart.c **** 	USART1->CR1 |= 0X200C;		 //1位停止,无校验位.
 236              		.loc 1 137 0
 237 0080 2C81     		strh	r4, [r5, #8]	@ movhi
 138:SYSTEM/usart/usart.c **** #if EN_USART1_RX				 //如果使能了接收
 238              		.loc 1 138 0
 239 0082 AA89     		ldrh	r2, [r5, #12]
 240              		.loc 1 142 0
 241 0084 0223     		movs	r3, #2
 138:SYSTEM/usart/usart.c **** #if EN_USART1_RX				 //如果使能了接收
 242              		.loc 1 138 0
 243 0086 42F40052 		orr	r2, r2, #8192
 244 008a 42F00C02 		orr	r2, r2, #12
 245 008e AA81     		strh	r2, [r5, #12]	@ movhi
 141:SYSTEM/usart/usart.c **** 	MY_NVIC_Init(3, 3, USART1_IRQn, 2); //组2，最低优先级
 246              		.loc 1 141 0
 247 0090 AC89     		ldrh	r4, [r5, #12]
 248              	.LVL21:
 249              		.loc 1 142 0
 250 0092 2522     		movs	r2, #37
 141:SYSTEM/usart/usart.c **** 	MY_NVIC_Init(3, 3, USART1_IRQn, 2); //组2，最低优先级
 251              		.loc 1 141 0
 252 0094 44F02004 		orr	r4, r4, #32
 253 0098 AC81     		strh	r4, [r5, #12]	@ movhi
 143:SYSTEM/usart/usart.c **** #endif
 144:SYSTEM/usart/usart.c **** }
 254              		.loc 1 144 0
 255 009a BDE87040 		pop	{r4, r5, r6, lr}
 256              	.LCFI3:
 257              		.cfi_restore 14
 258              		.cfi_restore 6
 259              		.cfi_restore 5
 260              		.cfi_restore 4
 261              		.cfi_def_cfa_offset 0
 142:SYSTEM/usart/usart.c **** #endif
 262              		.loc 1 142 0
 263 009e FFF7FEBF 		b	MY_NVIC_Init
 264              	.LVL22:
 265              	.L21:
 266 00a2 00BF     		.align	2
 267              	.L20:
 268 00a4 40420F00 		.word	1000000
 269 00a8 00100240 		.word	1073876992
 270 00ac 00080140 		.word	1073809408
 271 00b0 00380140 		.word	1073821696
 272              		.cfi_endproc
 273              	.LFE33:
 275              		.global	USART_RX_STA
 276              		.comm	USART_RX_BUF,200,4
 277              		.section	.bss.USART_RX_STA,"aw",%nobits
 278              		.align	1
 279              		.set	.LANCHOR0,. + 0
 282              	USART_RX_STA:
 283 0000 0000     		.space	2
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 9


 284              		.text
 285              	.Letext0:
 286              		.file 2 "d:\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\machine\\_default_t
 287              		.file 3 "d:\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 288              		.file 4 "SYSTEM/sys/core_cm3.h"
 289              		.file 5 "SYSTEM/sys/system_stm32f10x.h"
 290              		.file 6 "SYSTEM/sys/stm32f10x.h"
 291              		.file 7 "d:\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 292              		.file 8 "d:\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 293              		.file 9 "d:\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\st
 294              		.file 10 "d:\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 295              		.file 11 "SYSTEM/usart/usart.h"
 296              		.file 12 "SYSTEM/sys/sys.h"
ARM GAS  C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:16     .text.USART1_IRQHandler:00000000 $t
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:24     .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:115    .text.USART1_IRQHandler:00000058 $d
                            *COM*:000000c8 USART_RX_BUF
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:128    .text.uart_init:00000000 $t
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:136    .text.uart_init:00000000 uart_init
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:268    .text.uart_init:000000a4 $d
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:282    .bss.USART_RX_STA:00000000 USART_RX_STA
C:\Users\czsta\AppData\Local\Temp\ccb2u0b2.s:278    .bss.USART_RX_STA:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ui2f
__aeabi_fdiv
__aeabi_f2uiz
__aeabi_i2f
__aeabi_fsub
__aeabi_fmul
MY_NVIC_Init
